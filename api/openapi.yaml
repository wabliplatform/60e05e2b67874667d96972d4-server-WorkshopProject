openapi: 3.0.1
info:
  contact:
    email: lampralexandros@gmail.com
  description: This is a sample openApi document
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://wabli.netlify.app/
  title: TempApi
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- description: miniature-parakeet
  url: http://83.212.100.226:3002/v1
security:
- {}
tags:
- description: not yet ready
  name: myprojects
- description: not yet ready
  name: workpackage
- description: not yet ready
  name: deliverable
- description: not yet ready
  name: tasks
paths:
  /myprojects:
    post:
      operationId: createmyprojects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myprojects'
        description: data to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/myprojects'
          description: successful operation
      summary: Creates the data
      tags:
      - myprojects
      x-eov-operation-handler: controllers/MyprojectsController
  /myprojects/{myprojectsId}:
    delete:
      operationId: deletemyprojects
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: myprojectsId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: successful operation
      summary: Delete the element
      tags:
      - myprojects
      x-eov-operation-handler: controllers/MyprojectsController
    get:
      operationId: getmyprojects
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: myprojectsId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/myprojects'
          description: successful operation
      summary: Get the element
      tags:
      - myprojects
      x-eov-operation-handler: controllers/MyprojectsController
    put:
      operationId: updatemyprojects
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: myprojectsId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myprojects'
        description: data to be updated
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/myprojects'
          description: successful operation
      summary: Updates the element
      tags:
      - myprojects
      x-eov-operation-handler: controllers/MyprojectsController
  /myprojects/getAll:
    get:
      operationId: getAllmyprojects
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/myprojects'
                type: array
          description: successful operation
      summary: Get all the data
      tags:
      - myprojects
      x-method-getAll: "true"
      x-eov-operation-handler: controllers/MyprojectsController
  /workpackage:
    post:
      operationId: createworkpackage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workpackage'
        description: data to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workpackage'
          description: successful operation
      summary: Creates the data
      tags:
      - workpackage
      x-eov-operation-handler: controllers/WorkpackageController
  /workpackage/{workpackageId}:
    delete:
      operationId: deleteworkpackage
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: workpackageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: successful operation
      summary: Delete the element
      tags:
      - workpackage
      x-eov-operation-handler: controllers/WorkpackageController
    get:
      operationId: getworkpackage
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: workpackageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workpackage'
          description: successful operation
      summary: Get the element
      tags:
      - workpackage
      x-eov-operation-handler: controllers/WorkpackageController
    put:
      operationId: updateworkpackage
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: workpackageId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workpackage'
        description: data to be updated
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workpackage'
          description: successful operation
      summary: Updates the element
      tags:
      - workpackage
      x-eov-operation-handler: controllers/WorkpackageController
  /workpackage/getAll:
    get:
      operationId: getAllworkpackage
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/workpackage'
                type: array
          description: successful operation
      summary: Get all the data
      tags:
      - workpackage
      x-method-getAll: "true"
      x-eov-operation-handler: controllers/WorkpackageController
  /deliverable:
    post:
      operationId: createdeliverable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deliverable'
        description: data to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliverable'
          description: successful operation
      summary: Creates the data
      tags:
      - deliverable
      x-eov-operation-handler: controllers/DeliverableController
  /deliverable/{deliverableId}:
    delete:
      operationId: deletedeliverable
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: deliverableId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: successful operation
      summary: Delete the element
      tags:
      - deliverable
      x-eov-operation-handler: controllers/DeliverableController
    get:
      operationId: getdeliverable
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: deliverableId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliverable'
          description: successful operation
      summary: Get the element
      tags:
      - deliverable
      x-eov-operation-handler: controllers/DeliverableController
    put:
      operationId: updatedeliverable
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: deliverableId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deliverable'
        description: data to be updated
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliverable'
          description: successful operation
      summary: Updates the element
      tags:
      - deliverable
      x-eov-operation-handler: controllers/DeliverableController
  /deliverable/getAll:
    get:
      operationId: getAlldeliverable
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/deliverable'
                type: array
          description: successful operation
      summary: Get all the data
      tags:
      - deliverable
      x-method-getAll: "true"
      x-eov-operation-handler: controllers/DeliverableController
  /tasks:
    post:
      operationId: createtasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tasks'
        description: data to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tasks'
          description: successful operation
      summary: Creates the data
      tags:
      - tasks
      x-eov-operation-handler: controllers/TasksController
  /tasks/{tasksId}:
    delete:
      operationId: deletetasks
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: tasksId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: successful operation
      summary: Delete the element
      tags:
      - tasks
      x-eov-operation-handler: controllers/TasksController
    get:
      operationId: gettasks
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: tasksId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tasks'
          description: successful operation
      summary: Get the element
      tags:
      - tasks
      x-eov-operation-handler: controllers/TasksController
    put:
      operationId: updatetasks
      parameters:
      - description: the Id parameter
        explode: false
        in: path
        name: tasksId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tasks'
        description: data to be updated
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tasks'
          description: successful operation
      summary: Updates the element
      tags:
      - tasks
      x-eov-operation-handler: controllers/TasksController
  /tasks/getAll:
    get:
      operationId: getAlltasks
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tasks'
                type: array
          description: successful operation
      summary: Get all the data
      tags:
      - tasks
      x-method-getAll: "true"
      x-eov-operation-handler: controllers/TasksController
components:
  schemas:
    myprojects:
      example:
        pduration: pduration
        pWorkpackage:
        - ""
        - ""
        pdescription: pdescription
        pimage:
          data: data
          name: name
        pwebsite: pwebsite
        pDeliverable:
        - ""
        - ""
        pabstract: pabstract
        ptitle: ptitle
        _id: _id
        pstart: pstart
        pga: pga
        pend: pend
      properties:
        _id:
          type: string
        pimage:
          $ref: '#/components/schemas/myprojects_pimage'
        ptitle:
          type: string
        pstart:
          type: string
        pend:
          type: string
        pduration:
          type: string
        pabstract:
          type: string
        pdescription:
          type: string
        pga:
          type: string
        pwebsite:
          type: string
        pWorkpackage:
          items:
            oneOf:
            - $ref: '#/components/schemas/workpackage'
            - type: string
            x-one-of-name: workpackage
          type: array
        pDeliverable:
          items:
            oneOf:
            - $ref: '#/components/schemas/deliverable'
            - type: string
            x-one-of-name: deliverable
          type: array
      required:
      - pDeliverable
      - pWorkpackage
      - pabstract
      - pdescription
      - pduration
      - pend
      - pga
      - pimage
      - pstart
      - ptitle
      - pwebsite
      type: object
    workpackage:
      example:
        _id: _id
        wpName: wpName
        wpPms: wpPms
        wpRole: wpRole
      properties:
        _id:
          type: string
        wpPms:
          type: string
        wpName:
          type: string
        wpRole:
          type: string
      required:
      - wpName
      - wpPms
      - wpRole
      type: object
    deliverable:
      example:
        delStatus: delStatus
        delName: delName
        _id: _id
        delDuedate: delDuedate
      properties:
        _id:
          type: string
        delName:
          type: string
        delDuedate:
          type: string
        delStatus:
          type: string
      required:
      - delDuedate
      - delName
      - delStatus
      type: object
    tasks:
      example:
        sdate: sdate
        vpms: 0.8008281904610115
        tname: tname
        _id: _id
        tdescription: tdescription
        edate: edate
      properties:
        _id:
          type: string
        tname:
          type: string
        sdate:
          type: string
        edate:
          type: string
        vpms:
          format: double
          type: number
        tdescription:
          type: string
      required:
      - edate
      - sdate
      - tdescription
      - tname
      - vpms
      type: object
    myprojects_pimage:
      example:
        data: data
        name: name
      properties:
        data:
          type: string
        name:
          type: string
      type: object
      x-isSchemaOnly: "true"
